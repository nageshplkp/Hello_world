"""

"""

import getpass
import logging

import ssh
from sqlalchemy import or_
from etl.repo.pim_pm.pl_bbg_batch import PlBbgBatchRepo

DESTINATION = '/appl/da_dev/da_data/ff_pl/in'
BT_COMPLETE_STATUS = ['BBGERROR', 'BTERROR', 'SUCCESS']


class LoaderAgent(object):
    """

    """

    def __init__(self):
        logging.info('LoaderAgent')
        self.USERNAME = getpass.getuser()

    @staticmethod
    def get_requests(repo):
        """

        :param repo:
        :return:
        """
        model = repo.model
        data = repo.query.filter(
            or_(model.batch_status_code == 'SENT_TO_BT',
                model.bt_status_code in BT_COMPLETE_STATUS)).all()
        return data

    @staticmethod
    def update_request(batch_id, batch_status_code, repo):
        """

        :param batch_id:
        :param batch_status_code:
        :param repo:
        :return:
        """
        model = repo.model
        update_row = repo.query.filter(model.batch_id == batch_id).all()
        update_row[0].batch_status_code = batch_status_code
        repo.save(update_row)

    @staticmethod
    def load_csv(data_path):
        """

        :param data_path:
        :return:
        """
        try:

            # server = ssh(host='devpmetlv1.pimco.imswest.sscims.com', username='pachimat', private_key='/home/pachimat/.ssh/id_rsa')
            # result = server.execute('cp {0} {1}'.format(data_path, DESTINATION))
            
            print (result)
            return result
        except:
            print("Unble to download the file.")
            return False

    def run(self):
        """

        :return:
        """
        result = self.get_requests(PlBbgBatchRepo())
        for i in result:
            if i.bt_status_code == 'SUCCESS':
                if self.load_csv(i.bt_response_file_path):
                    self.update_request(i.batch_id, 'BT_DONE', PlBbgBatchRepo())
            elif i.bt_status_code == 'BBGERROR':
                self.update_request(i.batch_id, 'BBG_ERROR', PlBbgBatchRepo())
            elif i.bt_status_code == 'BTERROR':
                self.update_request(i.batch_id, 'BT_ERROR', PlBbgBatchRepo())


if __name__ == '__main__':
    agent = LoaderAgent()
    agent.run()
