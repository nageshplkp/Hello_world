import json
import pytest
import requests
from pimco_live.tests.pimco_live import agent
from etl.core.util import uri_get, uri_post

from pytest import fixture

from etl.repo.pim_pm.pl_bbg_batch import PlBbgBatchRepo

BASE_URL = 'http://ptp-dev/workshop/service/da/bbg_transport/'
GET_URL = '{}/check_status'.format(BASE_URL)
POST_URL = '{}/request_data'.format(BASE_URL)
src = '/appl/da_dev/da_data/bbg_transport/in/20180601.9998.csv'
dest= '/appl/da_dev/da_data/ff_pl/in/'
program_code ='GETDATA'


@fixture(scope="module")
def repo():
    return PlBbgBatchRepo()


@pytest.mark.parametrize("test_input,expected_output", [
    (9999, 'SUCCESS'),
    (9998, 'SUCCESS')
])
def test_get(test_input, expected_output):
    response = uri_get(GET_URL + '/' + str(test_input))
    assert response['request_status'] == expected_output


@pytest.mark.parametrize('test_input,expected_output', [
    (12345, 1)
])
def test_get_fail(test_input, expected_output):
    try:
        uri_get(GET_URL + '/' + str(test_input))

    except:
        flag = 1
    assert flag == expected_output


def test_get_request(repo):
    result = agent.FetcherAgent.get_request(repo, 'req')
    assert type(result) == list


def test_get_priority_list(repo):
    result = agent.RequestAgent().get_request(repo, 'req')
    plist = agent.RequestAgent().get_priority_list(result)
    assert type(plist) == list


def test_copy_file():
    rv = agent.ResponseAgent().copy_file(src, dest, program_code)
    if rv:
        assert True
