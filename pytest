import json
import pytest
import requests
from pimco_live import agent
from etl.core.util import uri_get, uri_post

from pytest import fixture

from etl.repo.pim_pm.pl_bbg_batch import PlBbgBatchRepo
from etl.repo.pim_pm.pl_bbg_batch_series_vw import PlBbgBatchSeriesVwRepo

X = vo(MODULE='pimco_live.agent.RequestAgent')
X_REQUEST='REQUEST'
BASE_URL = 'http://ptp-dev/workshop/service/da/bbg_transport/'
GET_URL = '{}check_status'.format(BASE_URL)
POST_URL = '{}request_data/'.format(BASE_URL)
src = '/appl/da_dev/da_data/bbg_transport/in/20180601.9998.csv'
dest = '/appl/da_dev/da_data/ff_pl/in/'
program_code = 'GETDATA'
obj = {
    '_config': None,
    'request_options': [{
        'option_name': 'DATERANGE',
        'option_value': '20180514|20180514'
    }],
    '_validation_errors': None,
    'request_description': 'PIMCO_LIVE',
    'request_data_items': [{
        'cusip': None,
        'yellow_key': 'Comdty',
        'bb_id': None,
        'tag': 'EDM87-LAST_TRADEABLE_DT',
        'isin': None,
        'bbg_query': None,
        'ticker': 'EDM87'
    }, {
        'cusip': None,
        'yellow_key': 'Comdty',
        'bb_id': None,
        'tag': 'EDU89-LAST_TRADEABLE_DT',
        'isin': None,
        'bbg_query': None,
        'ticker': 'EDU89'
    }, {
        'cusip': None,
        'yellow_key': 'Comdty',
        'bb_id': None,
        'tag': 'EDZ89-LAST_TRADEABLE_DT',
        'isin': None,
        'bbg_query': None,
        'ticker': 'EDZ89'
    },
        {
            'cusip': None,
            'yellow_key': 'Comdty',
            'bb_id': None,
            'tag': 'EDH90-LAST_TRADEABLE_DT',
            'isin': None,
            'bbg_query': None,
            'ticker': 'EDH90'
        }
    ],
    'program_code': 'GETDATA',
    'requestor_code': 'DA.PIMCOLIVE.DEV',
    'request_fields': ['LAST_TRADEABLE_DT'],
    'interface_code': 'DL',
    'callback_uri': None,
    'response_format_code': 'VERTICAL'
}
objj = json.dumps(obj)


def test_get_request(x):
    x.gr.assert_called_with(x_PlBbgBatchRepo,X_REQUEST)


@fixture
def x(x_get_request, x_get_priority_list, x_get_priority_list_by_interface_code,x_update_request):
    
    return struct(gr=x_get_request, gpl=x_get_priority_list,gpl_ic=x_get_priority_list_by_interface_code
                  ur=x_update_request)


@pytest.fixture
def x_PlBbgBatchRepo(PlBbgBatchRepo):
    return PlBbgBatchRepo()

@pytest.fixture
def x_PlBbgBatchSeriesVwRepo(PlBbgBatchSeriesVwRepo):
    return PlBbgBatchSeriesVwRepo()

@yield_fixture
def x_get_request():
    with patch(X.MODULE+'.get_request') as x:
        yield x

@yield_fixture
def x_get_priority_list():
    with patch(X.MODULE+'.get_priority_list') as x:
        yield x 

@yield_fixture
def x_get_priority_list_by_interface_code():
    with patch(X.MODULE+'.get_priority_list_by_interface_code') as x:
        yield x

@yield_fixture
def x_update_request():
    with patch(X.MODULE+'.update_request') as x:
        yield x
