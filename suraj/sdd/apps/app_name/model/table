# coding=utf-8
"""===========================================================================
DESCRIPTION:  Generated for BT_REQUEST

AUTHOR:       Generated by DA AutoGen (PIMCO\johntran)

DATE:         Jul  3 2018 11:34AM

!!! DO NOT MODIFY THIS FILE !!! 

To override/extend the class in this file, you'll have to do the following:
   * Create a folder called 'overrides'
   * Create a file with the same name as this file
   * The new file should contain a class with the same name as the of the class you want to override/extend
===========================================================================
"""

from __future__ import unicode_literals
from datetime import datetime

from ..app_config import AppConfig
from model_base import *
from helpers.bt_request import ModelFieldHelper, FieldNames


modelFieldHelper = ModelFieldHelper()


class BtRequest(ModelBase):
    bt_request_id = modelFieldHelper.bt_request_id()
    bbg_program_code = modelFieldHelper.bbg_program_code()
    bbg_interface_code = modelFieldHelper.bbg_interface_code()
    bt_requestor_code = modelFieldHelper.bt_requestor_code()
    bt_status_code = modelFieldHelper.bt_status_code()
    response_format_code = modelFieldHelper.response_format_code()
    lookback_bt_request_id = modelFieldHelper.lookback_bt_request_id()
    request_description = modelFieldHelper.request_description()
    request_date = modelFieldHelper.request_date()
    status_date = modelFieldHelper.status_date()
    request_object_data = modelFieldHelper.request_object_data()
    callback_uri = modelFieldHelper.callback_uri()
    data_file_path = modelFieldHelper.data_file_path()
    process_date = modelFieldHelper.process_date()
    retry_count = modelFieldHelper.retry_count()
    requestor_login = modelFieldHelper.requestor_login()
    request_data_hash = modelFieldHelper.request_data_hash()
    row_insert_by = modelFieldHelper.row_insert_by()
    row_insert_date = modelFieldHelper.row_insert_date()
    row_update_by = modelFieldHelper.row_update_by()
    row_update_date = modelFieldHelper.row_update_date()

    field_help_texts = modelFieldHelper.field_help_texts
    field_verbose_names = modelFieldHelper.field_verbose_names

    def get_unicode(self):
        return modelFieldHelper.get_unicode(self)

    def log_insert(self, by):
        self.row_insert_by = by
        self.row_insert_date = datetime.now()
        self.log_update(by)

    def log_update(self, by):
        self.row_update_by = by
        self.row_update_date = datetime.now()

    class Meta:
        abstract = False
        app_label = AppConfig.name
        db_table = '"%s"."%s"' % (modelFieldHelper.db_schema_name, modelFieldHelper.db_table_name,)
        index_together = ()
        #indexes = []
        permissions = (('read_%s' % modelFieldHelper.model_class_name_lower, 'Can read %s' % modelFieldHelper.model_verbose_name),)
        required_db_vendor = 'Oracle'
        unique_together = ()
        verbose_name = modelFieldHelper.model_verbose_name
        verbose_name_plural = modelFieldHelper.model_verbose_plural
