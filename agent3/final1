"""

"""

import getpass
import logging as log
import os
from shutil import copyfile

from sqlalchemy import or_

from etl.repo.fnd_cfdw import VEtlSourceMergedRepo
from etl.repo.pim_pm.pl_bbg_batch import PlBbgBatchRepo

md = VEtlSourceMergedRepo.instance.get_by_source_code('PL_BT_POLL_AGENT')
DESTINATION = md.output_file_folder
BT_COMPLETE_STATUS = ['BBGERROR', 'BTERROR', 'SUCCESS']


class LoaderAgent(object):
    """

    """

    def __init__(self):
        log.info('LoaderAgent')
        self.USERNAME = getpass.getuser()

    @staticmethod
    def copy_file(src, dst):
        if os.path.isdir(dst):
            dst = os.path.join(dst, os.path.basename(src))
            copyfile(src, dst)
            log.info("Copying {0} to {1}".format(src, dst))
        else:
            log.info("Can't copy {0} to destination: {1}".format(src, dst))
        return True

    @staticmethod
    def get_requests(repo):
        """

        :param repo:
        :return:
        """
        model = repo.model
        data = repo.query.filter(
            or_(model.batch_status_code == 'SENT_TO_BT',
                model.bt_status_code in BT_COMPLETE_STATUS)).all()
        return data

    @staticmethod
    def update_request(batch_id, batch_status_code, repo):
        """

        :param batch_id:
        :param batch_status_code:
        :param repo:
        :return:
        """
        model = repo.model
        update_row = repo.query.filter(model.batch_id == batch_id).all()
        update_row[0].batch_status_code = batch_status_code
        repo.save(update_row)

    def run(self):
        """

        :return:
        """
        result = self.get_requests(PlBbgBatchRepo())
        for i in result:
            if i.bt_status_code == 'SUCCESS':
                if self.copy_file(i.bt_response_file_path.strip(), DESTINATION):
                    self.update_request(i.batch_id, 'BT_DONE', PlBbgBatchRepo())


if __name__ == '__main__':
    agent = LoaderAgent()
    log.info('Start of the program')
    agent.run()
    log.info('End of the program')
